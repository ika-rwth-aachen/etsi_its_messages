/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "VAM-PDU-Descriptions"
 * 	found in "/input/VAM-PDU-Descriptions.asn"
 * 	`asn1c -fcompound-names -fprefix=vam_ts_ -no-gen-BER -no-gen-XER -no-gen-OER -no-gen-example -gen-UPER -gen-JER`
 */

#ifndef	_vam_ts_VruHighFrequencyContainer_H_
#define	_vam_ts_VruHighFrequencyContainer_H_


#include <etsi_its_vam_ts_coding/asn_application.h>

/* Including external dependencies */
#include "etsi_its_vam_ts_coding/vam_ts_Wgs84Angle.h"
#include "etsi_its_vam_ts_coding/vam_ts_Speed.h"
#include "etsi_its_vam_ts_coding/vam_ts_LongitudinalAcceleration.h"
#include "etsi_its_vam_ts_coding/vam_ts_CurvatureCalculationMode.h"
#include "etsi_its_vam_ts_coding/vam_ts_VruEnvironment.h"
#include "etsi_its_vam_ts_coding/vam_ts_VruMovementControl.h"
#include "etsi_its_vam_ts_coding/vam_ts_VruDeviceUsage.h"
#include <etsi_its_vam_ts_coding/constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct vam_ts_Curvature;
struct vam_ts_YawRate;
struct vam_ts_LateralAcceleration;
struct vam_ts_VerticalAcceleration;
struct vam_ts_GeneralizedLanePosition;
struct vam_ts_Wgs84Angle;
struct vam_ts_CartesianAngle;

/* vam_ts_VruHighFrequencyContainer */
typedef struct vam_ts_VruHighFrequencyContainer {
	vam_ts_Wgs84Angle_t	 heading;
	vam_ts_Speed_t	 speed;
	vam_ts_LongitudinalAcceleration_t	 longitudinalAcceleration;
	struct vam_ts_Curvature	*curvature;	/* OPTIONAL */
	vam_ts_CurvatureCalculationMode_t	*curvatureCalculationMode;	/* OPTIONAL */
	struct vam_ts_YawRate	*yawRate;	/* OPTIONAL */
	struct vam_ts_LateralAcceleration	*lateralAcceleration;	/* OPTIONAL */
	struct vam_ts_VerticalAcceleration	*verticalAcceleration;	/* OPTIONAL */
	struct vam_ts_GeneralizedLanePosition	*vruLanePosition;	/* OPTIONAL */
	vam_ts_VruEnvironment_t	*environment;	/* OPTIONAL */
	vam_ts_VruMovementControl_t	*movementControl;	/* OPTIONAL */
	struct vam_ts_Wgs84Angle	*orientation;	/* OPTIONAL */
	struct vam_ts_CartesianAngle	*rollAngle;	/* OPTIONAL */
	vam_ts_VruDeviceUsage_t	*deviceUsage;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} vam_ts_VruHighFrequencyContainer_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_vam_ts_VruHighFrequencyContainer;
extern asn_SEQUENCE_specifics_t asn_SPC_vam_ts_VruHighFrequencyContainer_specs_1;
extern asn_TYPE_member_t asn_MBR_vam_ts_VruHighFrequencyContainer_1[14];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "etsi_its_vam_ts_coding/vam_ts_Curvature.h"
#include "etsi_its_vam_ts_coding/vam_ts_YawRate.h"
#include "etsi_its_vam_ts_coding/vam_ts_LateralAcceleration.h"
#include "etsi_its_vam_ts_coding/vam_ts_VerticalAcceleration.h"
#include "etsi_its_vam_ts_coding/vam_ts_GeneralizedLanePosition.h"
#include "etsi_its_vam_ts_coding/vam_ts_Wgs84Angle.h"
#include "etsi_its_vam_ts_coding/vam_ts_CartesianAngle.h"

#endif	/* _vam_ts_VruHighFrequencyContainer_H_ */
#include <etsi_its_vam_ts_coding/asn_internal.h>
