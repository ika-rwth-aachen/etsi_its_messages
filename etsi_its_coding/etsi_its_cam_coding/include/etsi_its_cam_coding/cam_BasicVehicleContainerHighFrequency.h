/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "CAM-PDU-Descriptions"
 * 	found in "/input/CAM-PDU-Descriptions.asn"
 * 	`asn1c -fcompound-names -fprefix=cam_ -no-gen-BER -no-gen-XER -no-gen-OER -no-gen-example -gen-UPER -gen-JER`
 */

#ifndef	_cam_BasicVehicleContainerHighFrequency_H_
#define	_cam_BasicVehicleContainerHighFrequency_H_


#include <etsi_its_cam_coding/asn_application.h>

/* Including external dependencies */
#include "etsi_its_cam_coding/cam_Heading.h"
#include "etsi_its_cam_coding/cam_Speed.h"
#include "etsi_its_cam_coding/cam_DriveDirection.h"
#include "etsi_its_cam_coding/cam_VehicleLength.h"
#include "etsi_its_cam_coding/cam_VehicleWidth.h"
#include "etsi_its_cam_coding/cam_LongitudinalAcceleration.h"
#include "etsi_its_cam_coding/cam_Curvature.h"
#include "etsi_its_cam_coding/cam_CurvatureCalculationMode.h"
#include "etsi_its_cam_coding/cam_YawRate.h"
#include "etsi_its_cam_coding/cam_AccelerationControl.h"
#include "etsi_its_cam_coding/cam_LanePosition.h"
#include "etsi_its_cam_coding/cam_PerformanceClass.h"
#include <etsi_its_cam_coding/constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct cam_SteeringWheelAngle;
struct cam_LateralAcceleration;
struct cam_VerticalAcceleration;
struct cam_CenDsrcTollingZone;

/* cam_BasicVehicleContainerHighFrequency */
typedef struct cam_BasicVehicleContainerHighFrequency {
	cam_Heading_t	 heading;
	cam_Speed_t	 speed;
	cam_DriveDirection_t	 driveDirection;
	cam_VehicleLength_t	 vehicleLength;
	cam_VehicleWidth_t	 vehicleWidth;
	cam_LongitudinalAcceleration_t	 longitudinalAcceleration;
	cam_Curvature_t	 curvature;
	cam_CurvatureCalculationMode_t	 curvatureCalculationMode;
	cam_YawRate_t	 yawRate;
	cam_AccelerationControl_t	*accelerationControl;	/* OPTIONAL */
	cam_LanePosition_t	*lanePosition;	/* OPTIONAL */
	struct cam_SteeringWheelAngle	*steeringWheelAngle;	/* OPTIONAL */
	struct cam_LateralAcceleration	*lateralAcceleration;	/* OPTIONAL */
	struct cam_VerticalAcceleration	*verticalAcceleration;	/* OPTIONAL */
	cam_PerformanceClass_t	*performanceClass;	/* OPTIONAL */
	struct cam_CenDsrcTollingZone	*cenDsrcTollingZone;	/* OPTIONAL */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} cam_BasicVehicleContainerHighFrequency_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_cam_BasicVehicleContainerHighFrequency;
extern asn_SEQUENCE_specifics_t asn_SPC_cam_BasicVehicleContainerHighFrequency_specs_1;
extern asn_TYPE_member_t asn_MBR_cam_BasicVehicleContainerHighFrequency_1[16];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "etsi_its_cam_coding/cam_SteeringWheelAngle.h"
#include "etsi_its_cam_coding/cam_LateralAcceleration.h"
#include "etsi_its_cam_coding/cam_VerticalAcceleration.h"
#include "etsi_its_cam_coding/cam_CenDsrcTollingZone.h"

#endif	/* _cam_BasicVehicleContainerHighFrequency_H_ */
#include <etsi_its_cam_coding/asn_internal.h>
