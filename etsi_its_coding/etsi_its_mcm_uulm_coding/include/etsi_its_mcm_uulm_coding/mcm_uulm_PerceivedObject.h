/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "ETSI-ITS-CDD"
 * 	found in "/input/ETSI-ITS-CDD.asn"
 * 	`asn1c -fcompound-names -fprefix=mcm_uulm_ -no-gen-BER -no-gen-XER -no-gen-OER -no-gen-example -gen-UPER -gen-JER`
 */

#ifndef	_mcm_uulm_PerceivedObject_H_
#define	_mcm_uulm_PerceivedObject_H_


#include <etsi_its_mcm_uulm_coding/asn_application.h>

/* Including external dependencies */
#include "etsi_its_mcm_uulm_coding/mcm_uulm_Identifier2B.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_DeltaTimeMilliSecondSigned.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_CartesianPosition3dWithConfidence.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_ObjectPerceptionQuality.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_StationId.h"
#include <etsi_its_mcm_uulm_coding/constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct mcm_uulm_Velocity3dWithConfidence;
struct mcm_uulm_Acceleration3dWithConfidence;
struct mcm_uulm_EulerAnglesWithConfidence;
struct mcm_uulm_CartesianAngularVelocityComponent;
struct mcm_uulm_LowerTriangularPositiveSemidefiniteMatrices;
struct mcm_uulm_ObjectDimension;
struct mcm_uulm_SequenceOfIdentifier1B;
struct mcm_uulm_ObjectClassDescription;
struct mcm_uulm_MapPosition;
struct mcm_uulm_PredictionsContainer;

/* mcm_uulm_PerceivedObject */
typedef struct mcm_uulm_PerceivedObject {
	mcm_uulm_Identifier2B_t	*objectId;	/* OPTIONAL */
	mcm_uulm_DeltaTimeMilliSecondSigned_t	 measurementDeltaTime;
	mcm_uulm_CartesianPosition3dWithConfidence_t	 position;
	struct mcm_uulm_Velocity3dWithConfidence	*velocity;	/* OPTIONAL */
	struct mcm_uulm_Acceleration3dWithConfidence	*acceleration;	/* OPTIONAL */
	struct mcm_uulm_EulerAnglesWithConfidence	*angles;	/* OPTIONAL */
	struct mcm_uulm_CartesianAngularVelocityComponent	*zAngularVelocity;	/* OPTIONAL */
	struct mcm_uulm_LowerTriangularPositiveSemidefiniteMatrices	*lowerTriangularCorrelationMatrices;	/* OPTIONAL */
	struct mcm_uulm_ObjectDimension	*objectDimensionZ;	/* OPTIONAL */
	struct mcm_uulm_ObjectDimension	*objectDimensionY;	/* OPTIONAL */
	struct mcm_uulm_ObjectDimension	*objectDimensionX;	/* OPTIONAL */
	mcm_uulm_DeltaTimeMilliSecondSigned_t	*objectAge;	/* OPTIONAL */
	mcm_uulm_ObjectPerceptionQuality_t	*objectPerceptionQuality;	/* OPTIONAL */
	struct mcm_uulm_SequenceOfIdentifier1B	*sensorIdList;	/* OPTIONAL */
	struct mcm_uulm_ObjectClassDescription	*classification;	/* OPTIONAL */
	struct mcm_uulm_MapPosition	*mapPosition;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct mcm_uulm_PredictionsContainer	*predictions;	/* OPTIONAL */
	mcm_uulm_StationId_t	*associatedStationID;	/* OPTIONAL */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} mcm_uulm_PerceivedObject_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_mcm_uulm_PerceivedObject;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "etsi_its_mcm_uulm_coding/mcm_uulm_Velocity3dWithConfidence.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_Acceleration3dWithConfidence.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_EulerAnglesWithConfidence.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_CartesianAngularVelocityComponent.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_LowerTriangularPositiveSemidefiniteMatrices.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_ObjectDimension.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_SequenceOfIdentifier1B.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_ObjectClassDescription.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_MapPosition.h"
#include "etsi_its_mcm_uulm_coding/mcm_uulm_PredictionsContainer.h"

#endif	/* _mcm_uulm_PerceivedObject_H_ */
#include <etsi_its_mcm_uulm_coding/asn_internal.h>
